{"version":3,"sources":["index.js"],"names":["ToDoItem","props","className","item","onClick","deleteItem","ToDoList","list","length","map","key","ToDo","setCurrentTodo","event","setState","todoText","target","value","removeItem","console","log","addTodo","state","push","type","placeholder","onChange","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAIMA,G,MAAW,SAAEC,GAClB,OACC,yBAAKC,UAAU,aACd,yBAAKA,UAAU,cAAcD,EAAME,MACnC,yBAAKD,UAAU,aAAaE,QAAU,kBAAMH,EAAMI,aAAlD,QAKGC,EAAW,SAAEL,GAClB,OAAIA,EAAMM,KAAKC,OAEb,yBAAKN,UAAU,kBACd,yCACA,yBAAKA,UAAU,aACbD,EAAMM,KAAKE,KAAK,SAAEN,EAAMO,GAAR,OAAiB,kBAACV,EAAD,CAAUU,IAAKA,EAAKP,KAAMA,EAAME,WAAYJ,EAAMI,kBAOvF,+BAIIM,E,YACF,aAAe,IAAD,8BACV,+CAOJC,eAAiB,SAACC,GACjB,EAAKC,SAAU,CACdC,SAAUF,EAAMG,OAAOC,SAVX,EAcdC,WAAa,SAACf,GACbgB,QAAQC,IAAK,MACbD,QAAQC,IAAKjB,IAhBA,EAmBdkB,QAAU,SAACR,GACV,IAAMN,EAAO,EAAKe,MAAMf,MAAQ,GAChCA,EAAKgB,KAAM,EAAKD,MAAMP,UACtB,EAAKD,SAAU,CACdP,KAAMA,KAvBM,EA2BdF,WAAa,SAACQ,GACbM,QAAQC,IAAK,OA1BV,EAAKE,MAAQ,CACZP,SAAU,GACVR,KAAO,CAAE,MAAO,QAJP,E,sEAgCV,OACI,6BACF,wCACA,2BAAOiB,KAAK,OAAOC,YAAY,UAAUC,SAAUC,KAAKf,iBACxD,2BAAOY,KAAK,SAASpB,QAASuB,KAAKN,QAASJ,MAAM,QAClD,kBAACX,EAAD,CAAUC,KAAMoB,KAAKL,MAAMf,KAAMF,WAAYsB,KAAKtB,kB,GAtCzCuB,IAAMC,WA4CzBC,IAASC,OAAO,kBAACpB,EAAD,MAAUqB,SAASC,eAAe,W","file":"static/js/main.71c5eebf.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst ToDoItem = ( props ) => {\r\n\treturn (\r\n\t\t<div className=\"todo-item\">\r\n\t\t\t<div className=\"todo-title\">{props.item}</div>\r\n\t\t\t<div className=\"todo-close\" onClick={ () => props.deleteItem }>X</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ToDoList = ( props ) => {\r\n\tif( props.list.length ) {\r\n\t\treturn (\r\n\t\t\t<div className=\"todo-list-wrap\">\r\n\t\t\t\t<h3>Todo List</h3>\r\n\t\t\t\t<div className=\"todo-list\">\r\n\t\t\t\t\t{props.list.map( ( item, key ) => <ToDoItem key={key} item={item} deleteItem={props.deleteItem} /> )}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div></div>\r\n\t)\r\n}\r\n\r\nclass ToDo extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        \ttodoText: '',\r\n        \tlist : [ 'One', 'Two' ],\r\n        }\r\n    }\r\n\r\n    setCurrentTodo = (event) => {\r\n    \tthis.setState( {\r\n    \t\ttodoText: event.target.value\r\n    \t});\r\n    }\r\n\r\n    removeItem = (item) => {\r\n    \tconsole.log( 'ok' );\r\n    \tconsole.log( item );\r\n    }\r\n\r\n    addTodo = (event) => {\r\n    \tconst list = this.state.list || [];\r\n    \tlist.push( this.state.todoText );\r\n    \tthis.setState( {\r\n    \t\tlist: list\r\n    \t});\r\n    }\r\n\r\n    deleteItem = (event) => {\r\n    \tconsole.log( 'ok' );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\t\t        <h1>Todo App</h1>\r\n\t\t        <input type=\"text\" placeholder=\"Title..\" onChange={this.setCurrentTodo} />\r\n\t\t        <input type=\"submit\" onClick={this.addTodo} value=\"Add\" />\r\n\t\t        <ToDoList list={this.state.list} deleteItem={this.deleteItem} />\r\n\t        </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<ToDo />, document.getElementById(\"root\"));"],"sourceRoot":""}